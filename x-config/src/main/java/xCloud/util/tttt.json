Tactic state
1 goal
case intro.intro.intro.intro
x y z : ℝ
hcond : x + y + z = x * y * z
hx : |x| ≠ 1 / √3
hy : |y| ≠ 1 / √3
hz : |z| ≠ 1 / √3
f : ℕ → ℕ := fun t => (3 * t - t ^ 3) / (1 - 3 * t ^ 2)
A : ℝ
hA : x = tan A
B : ℝ
hB : y = tan B
C : ℝ
hC : z = tan C
h_tan : tan A + tan B + tan C = tan A * tan B * tan C
h_f_tan : ∀ (θ : ℝ), 1 - 3 * tan θ ^ 2 ≠ 0 → ↑(f sorry) = tan (3 * θ)
h_den_x : 1 - 3 * x ^ 2 ≠ 0
h_den_y : 1 - 3 * y ^ 2 ≠ 0
h_den_z : 1 - 3 * z ^ 2 ≠ 0
h_fx : ↑(f sorry) = tan (3 * A)
h_fy : ↑(f sorry) = tan (3 * B)
h_fz : ↑(f sorry) = tan (3 * C)
h_left : ↑(f sorry) + ↑(f sorry) + ↑(f sorry) = tan (3 * A) + tan (3 * B) + tan (3 * C)
h_right : ↑(f sorry) * ↑(f sorry) * ↑(f sorry) = tan (3 * A) * tan (3 * B) * tan (3 * C)
n : ℤ
h_abc : A + B + C = ↑n * π
this✝ : 3 * A + 3 * B + 3 * C = 3 * ↑n * π
h_tan_sum : tan (3 * A + 3 * B + 3 * C) = 0
h_tan_eq : tan (3 * A + 3 * B + 3 * C) =
(tan (3 * A) + tan (3 * B) + tan (3 * C) - tan (3 * A) * tan (3 * B) * tan (3 * C)) /
(1 - (tan (3 * A) * tan (3 * B) + tan (3 * B) * tan (3 * C) + tan (3 * C) * tan (3 * A)))
this : tan (3 * A) + tan (3 * B) + tan (3 * C) = tan (3 * A) * tan (3 * B) * tan (3 * C)
⊢ let f := fun t => (3 * t - t ^ 3) / (1 - 3 * t ^ 2);
f x + f y + f z = f x * f y * f z
