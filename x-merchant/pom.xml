<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>xCloud</groupId>
        <artifactId>cloud-def</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>x-merchant</artifactId>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>xCloud</groupId>
            <artifactId>x-config</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>


        <dependency>
            <groupId>xCloud</groupId>
            <artifactId>x-common</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>4.33.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>32.1.2-jre</version> <!-- 与 Selenium 4.25.0 兼容 -->
        </dependency>



        <!-- 10.langchain4j
        LangChain4j 是专为 Java 生态设计的开源框架，兼容 Spring Boot。它简化了大型语言模型（LLM）在 Java 应用中的集成，提供了统一的 API、自动配置和与 Spring 生态的无缝衔接 -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-open-ai-spring-boot-starter</artifactId>
            <version>1.0.0-beta3</version>
        </dependency>
        <!--10.2 Spring Boot starter for declarative AI Services
        LangChain4j provides a Spring Boot starter for auto-configuring AI Services, RAG, Tools etc.
        Assuming you have already imported one of the integrations starters (see above), import langchain4j-spring-boot-starter:
        You can now define AI Service interface and annotate it with @AiService:
        声明式AI服务的Spring Boot启动器
        LangChain4j提供了一个Spring Boot启动器，用于自动配置AI服务、RAG、工具等。
        假设您已经导入了一个集成启动器（见上文），请导入langchain4j spring boot starter：
        -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-spring-boot-starter</artifactId>
            <version>1.0.0-beta3</version>
        </dependency>

        <!-- 阿里数据库连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
             <version>1.2.8</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>19</source>
                    <target>19</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>