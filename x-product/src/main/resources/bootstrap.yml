spring:
#  1-kafka配置
  kafka:
    #Kafka Broker 的地址列表，多个地址用逗号分隔
    bootstrap-servers: localhost:9092
    consumer:
      #消费者组的 ID，同一个组的消费者会共同消费 Topic 中的数据，每个消息只会被组内的一个消费者消费
      group-id: andy_group
      #当消费者组中没有初始偏移量或当前偏移量在服务器上不再存在时，该如何处理。earliest 表示从最早的偏移量开始消费，latest 表示从最新的偏移量开始消费。
      auto-offset-reset: earliest
      #生产者用于序列化消息键和值的类。这里使用了字符串序列化器
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: xcloud.xproduct.domain
#        spring:
#        json.trusted.packages: *
#    不要使用*
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      3-elasticsearch配置
  elasticsearch:
    uris: https://localhost:9200  # ES地址
    username: elastic
    password: ASDks#d12
    ssl:
      verification: false
  #      certificate-authorities: classpath:http_ca.crt  # 自签名证书路径（可选）
  #      enabled: true
  config:
    import:
      #      - optional:nacos:${spring.application.name}
      - optional:nacos:shop-product.yml
  application:
    name: shop-product
  cloud:
    nacos:
      config:
        namespace:
        server-addr: 127.0.0.1:8848
        group: ANDY_GROUP
      discovery:
        server-addr: 127.0.0.1:8848
# 1-swagger配置
springdoc:
  swagger-ui:
    css: /customSwaggerUI.css
    path: /docs #访问地址变为：http://localhost:8080/docs。
    operations-sorter: alpha # 接口按字母排序
    tags-sorter: alpha # 按字母排序
    display-request-duration: true # 显示请求耗时
    default-models-expand-depth: -1 # 隐藏默认模型展开
    deep-linking: true
    try-it-out-enabled: true
    display-operation-id: false
    doc-expansion: list

    #deep-linking: true         # 启用深层链接
    #    try-it-out-enabled: true   # 启用“Try it out”功能
    #    display-operation-id: false # 隐藏操作ID
    #    doc-expansion: list        # 默认展开列表视图（可选：full, none）

  #性能优化
  #  API 数量较多，Swagger 界面可能会加载缓慢，可以通过以下方式优化：
  #按需加载
  #配置只展示特定包下的控制器，避免扫描所有类。--非常有效
  #  packages-to-scan: xcloud.xproduct.controller
#  packages-to-scan: xcloud.xproduct.config
  #  启用缓存以减少重复生成文档的开销。
  cache:
    disabled: false
#2-日志
logging:
  level:
    org.elasticsearch.client: debug
    co.elastic.clients: debug

#    3-
#  langchain4j.open-ai.chat-model.api-key=${OPENAI_API_KEY}
#  langchain4j.open-ai.chat-model.model-name=gpt-4o
#  langchain4j.open-ai.chat-model.log-requests=true
#If you don't have your own OpenAI API key, don't worry.
#  You can temporarily use demo key, which we provide for free for demonstration purposes.
#  Be aware that when using the demo key, all requests to the OpenAI API need to go through our proxy, which injects the real key before forwarding your request to the OpenAI API.
#  We do not collect or use your data in any way. The demo key has a quota, is restricted to the gpt-4o-mini model,
#  and should only be used for demonstration purposes.
langchain4j:
  open-ai:
    chat-model:
#      api-key: ${OPENAI_API_KEY}
      api-key: "demo"
      model-name: "gpt-4o-mini"
      log-requests: true
    #If you need an instance of a StreamingChatLanguageModel, use the streaming-chat-model instead of the chat-model properties:
#    streaming-chat-model:
#      api-key: ${OPENAI_API_KEY}
#      model-name: gpt-4
#      log-requests: true
#      log-responses: true
#      temperature: 0.7
